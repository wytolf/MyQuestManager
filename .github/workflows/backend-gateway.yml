name: Gateway

on:
  push:
    branches: [main, dev/*]
    paths:
      - 'EFTQuestManager-backend/EFTQuestManager-backend-gateway/**'
  pull_request:
    branches: [main, dev/*]
    paths:
      - 'EFTQuestManager-backend/EFTQuestManager-backend-gateway/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: EFTQuestManager-backend-gateway

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependencies
        run: npm install
        working-directory: EFTQuestManager-backend/EFTQuestManager-backend-gateway

      - name: Lint
        run: npm run lint
        working-directory: EFTQuestManager-backend/EFTQuestManager-backend-gateway

      - name: Test
        run: npm test
        working-directory: EFTQuestManager-backend/EFTQuestManager-backend-gateway


      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Copy
#        run: npm run build
#        working-directory: EFTQuestManager-backend/EFTQuestManager-backend-gateway
#
#      - name: Archive artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: backend-gateway-build
#          path: EFTQuestManager-backend/EFTQuestManager-backend-gateway/dist/